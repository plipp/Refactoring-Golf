diff -U 3 -H -d -r -N -- 5. Fourth Hole/.project 4. Third Hole/.project
--- 5. Fourth Hole/.project	2012-06-08 00:19:30.000000000 +0200
+++ 4. Third Hole/.project	2012-06-08 00:19:30.000000000 +0200
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <projectDescription>
-	<name>5. Fourth Hole</name>
+	<name>4. Third Hole</name>
 	<comment></comment>
 	<projects>
 	</projects>
diff -U 3 -H -d -r -N -- 5. Fourth Hole/4. Third Hole.iml 4. Third Hole/4. Third Hole.iml
--- 5. Fourth Hole/4. Third Hole.iml	1970-01-01 01:00:00.000000000 +0100
+++ 4. Third Hole/4. Third Hole.iml	2012-10-06 13:57:27.863273891 +0200
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="false">
+    <output url="file://$MODULE_DIR$/bin" />
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test" isTestSource="false" />
+    </content>
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="jdk" jdkName="1.7" jdkType="JavaSDK" />
+    <orderEntry type="module-library">
+      <library name="junit4">
+        <CLASSES>
+          <root url="jar://$APPLICATION_HOME_DIR$/lib/junit-4.10.jar!/" />
+        </CLASSES>
+        <JAVADOC />
+        <SOURCES />
+      </library>
+    </orderEntry>
+  </component>
+</module>
+
diff -U 3 -H -d -r -N -- 5. Fourth Hole/5. Fourth Hole.iml 4. Third Hole/5. Fourth Hole.iml
--- 5. Fourth Hole/5. Fourth Hole.iml	2012-10-06 13:57:27.867273891 +0200
+++ 4. Third Hole/5. Fourth Hole.iml	1970-01-01 01:00:00.000000000 +0100
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="JAVA_MODULE" version="4">
-  <component name="NewModuleRootManager" inherit-compiler-output="false">
-    <output url="file://$MODULE_DIR$/bin" />
-    <exclude-output />
-    <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$/src/main" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test" isTestSource="false" />
-    </content>
-    <orderEntry type="sourceFolder" forTests="false" />
-    <orderEntry type="jdk" jdkName="1.7" jdkType="JavaSDK" />
-    <orderEntry type="module-library">
-      <library name="junit4">
-        <CLASSES>
-          <root url="jar://$APPLICATION_HOME_DIR$/lib/junit-4.10.jar!/" />
-        </CLASSES>
-        <JAVADOC />
-        <SOURCES />
-      </library>
-    </orderEntry>
-  </component>
-</module>
-
diff -U 3 -H -d -r -N -- 5. Fourth Hole/src/main/refactoringgolf/store/ClassDiagram.ucls 4. Third Hole/src/main/refactoringgolf/store/ClassDiagram.ucls
--- 5. Fourth Hole/src/main/refactoringgolf/store/ClassDiagram.ucls	2012-06-08 00:19:30.000000000 +0200
+++ 4. Third Hole/src/main/refactoringgolf/store/ClassDiagram.ucls	2012-06-08 00:19:30.000000000 +0200
@@ -1,62 +1,57 @@
 <class-diagram version="1.0.4" icons="true" always-add-relationships="false" generalizations="true" realizations="true" 
   associations="true" dependencies="false" nesting-relationships="true">  
-  <class id="1" corner="BOTTOM_RIGHT" language="java" name="refactoringgolf.store.Employee" project="5. Fourth Hole" 
-    file="/5. Fourth Hole/src/main/refactoringgolf/store/Employee.java" binary="false">    
-    <position x="31" y="-68" width="160" height="355"/>    
+  <class id="1" corner="BOTTOM_RIGHT" language="java" name="refactoringgolf.store.OrderItem" project="4. Third Hole" 
+    file="/4. Third Hole/src/main/refactoringgolf/store/OrderItem.java" binary="false">    
+    <position x="87" y="91" width="-1" height="-1"/>    
     <display autosize="true" package="true" initial-value="false" signature="true" visibility="true">      
       <attributes public="true" package="true" protected="true" private="true"/>      
       <operations public="true" package="true" protected="true" private="true"/>    
     </display>  
   </class>  
-  <class id="2" corner="BOTTOM_RIGHT" language="java" name="refactoringgolf.store.Manager" project="5. Fourth Hole" 
-    file="/5. Fourth Hole/src/main/refactoringgolf/store/Manager.java" binary="false">    
-    <position x="396" y="223" width="-1" height="-1"/>    
+  <class id="2" corner="BOTTOM_RIGHT" language="java" name="refactoringgolf.store.AccessoriesDiscount" 
+    project="4. Third Hole" file="/4. Third Hole/src/main/refactoringgolf/store/AccessoriesDiscount.java" binary="false">    
+    <position x="132" y="263" width="-1" height="-1"/>    
     <display autosize="true" package="true" initial-value="false" signature="true" visibility="true">      
       <attributes public="true" package="true" protected="true" private="true"/>      
       <operations public="true" package="true" protected="true" private="true"/>    
     </display>  
   </class>  
-  <class id="3" corner="BOTTOM_RIGHT" language="java" name="refactoringgolf.store.Salesman" project="5. Fourth Hole" 
-    file="/5. Fourth Hole/src/main/refactoringgolf/store/Salesman.java" binary="false">    
-    <position x="395" y="22" width="-1" height="-1"/>    
+  <class id="3" corner="BOTTOM_RIGHT" language="java" name="refactoringgolf.store.BikesDiscount" project="4. Third Hole" 
+    file="/4. Third Hole/src/main/refactoringgolf/store/BikesDiscount.java" binary="false">    
+    <position x="343" y="262" width="-1" height="-1"/>    
     <display autosize="true" package="true" initial-value="false" signature="true" visibility="true">      
       <attributes public="true" package="true" protected="true" private="true"/>      
       <operations public="true" package="true" protected="true" private="true"/>    
     </display>  
   </class>  
-  <generalization>    
+  <interface id="4" corner="BOTTOM_RIGHT" language="java" name="refactoringgolf.store.CategoryDiscount" 
+    project="4. Third Hole" file="/4. Third Hole/src/main/refactoringgolf/store/CategoryDiscount.java" binary="false">    
+    <position x="342" y="100" width="-1" height="-1"/>    
+    <display autosize="true" package="true" initial-value="false" signature="true" visibility="true">      
+      <attributes public="true" package="true" protected="true" private="true"/>      
+      <operations public="true" package="true" protected="true" private="true"/>    
+    </display>  
+  </interface>  
+  <class id="5" corner="BOTTOM_RIGHT" language="java" name="refactoringgolf.store.CloathingDiscount" 
+    project="4. Third Hole" file="/4. Third Hole/src/main/refactoringgolf/store/CloathingDiscount.java" binary="false">    
+    <position x="548" y="264" width="-1" height="-1"/>    
+    <display autosize="true" package="true" initial-value="false" signature="true" visibility="true">      
+      <attributes public="true" package="true" protected="true" private="true"/>      
+      <operations public="true" package="true" protected="true" private="true"/>    
+    </display>  
+  </class>  
+  <realization>    
+    <end type="SOURCE" nodeId="5"/>    
+    <end type="TARGET" nodeId="4"/>  
+  </realization>  
+  <realization>    
     <end type="SOURCE" nodeId="3"/>    
-    <end type="TARGET" nodeId="1"/>  
-  </generalization>  
-  <association>    
-    <bendpoint x="180" y="298"/>    
-    <bendpoint x="229" y="297"/>    
-    <end type="SOURCE" nodeId="1" navigable="false">      
-      <attribute name="manager"/>      
-      <multiplicity minimum="0" maximum="1">        
-        <position x="214" y="252" width="18" height="14"/>      
-      </multiplicity>    
-    </end>    
-    <end type="TARGET" nodeId="1" navigable="true"/>    
-    <display labels="true" multiplicity="true"/>  
-  </association>  
-  <association>    
-    <bendpoint x="395" y="318"/>    
-    <bendpoint x="171" y="318"/>    
-    <end type="SOURCE" nodeId="2" navigable="false">      
-      <attribute name="subordinates"/>      
-      <multiplicity minimum="0" maximum="2147483647">        
-        <position x="151" y="315" width="16" height="14"/>      
-      </multiplicity>    
-    </end>    
-    <end type="TARGET" nodeId="1" navigable="true"/>    
-    <display labels="true" multiplicity="true"/>  
-  </association>  
-  <generalization>    
-    <bendpoint x="259" y="174"/>    
+    <end type="TARGET" nodeId="4"/>  
+  </realization>  
+  <realization>    
     <end type="SOURCE" nodeId="2"/>    
-    <end type="TARGET" nodeId="1"/>  
-  </generalization>  
+    <end type="TARGET" nodeId="4"/>  
+  </realization>  
   <classifier-display autosize="true" package="true" initial-value="false" signature="true" visibility="true">    
     <attributes public="true" package="true" protected="true" private="true"/>    
     <operations public="true" package="true" protected="true" private="true"/>  
diff -U 3 -H -d -r -N -- 5. Fourth Hole/src/main/refactoringgolf/store/Employee.java 4. Third Hole/src/main/refactoringgolf/store/Employee.java
--- 5. Fourth Hole/src/main/refactoringgolf/store/Employee.java	2012-06-08 00:19:30.000000000 +0200
+++ 4. Third Hole/src/main/refactoringgolf/store/Employee.java	2012-06-08 00:19:30.000000000 +0200
@@ -1,5 +1,8 @@
 package refactoringgolf.store;
 
+import java.util.Collections;
+import java.util.HashSet;
+import java.util.Set;
 
 public abstract class Employee {
 
@@ -10,6 +13,8 @@
 	protected String street;
 	protected String city;
 	protected String country;
+	protected Set<Employee> subordinates = new HashSet<Employee>();
+
 	protected Employee(String firstName, String lastName, float fixedSalary) {
 		this.firstName = firstName;
 		this.lastName = lastName;
@@ -56,14 +61,17 @@
 		this.country = country;
 	}
 
-	public float netSalary() {
-		float benefits = salaryBenefits();
-		float pensionFounds = this.fixedSalary * 10 / 100;
-		float tax = 0;
-		if (fixedSalary > 3500)
-			tax = fixedSalary * 5 / 100;
-		return fixedSalary + benefits - pensionFounds - tax;
+	public Set<Employee> getSubordinates() {
+		return Collections.unmodifiableSet(subordinates);
+	}
+
+	public void addSubordinate(Employee subordinate) {
+		subordinates.add(subordinate);
+		subordinate.manager = this;
+	}
+
+	public void removeSubordinate(Employee subordinate) {
+		subordinates.remove(subordinate);
+		subordinate.manager = null;
 	}
-	
-	protected abstract float salaryBenefits();
 }
diff -U 3 -H -d -r -N -- 5. Fourth Hole/src/main/refactoringgolf/store/Manager.java 4. Third Hole/src/main/refactoringgolf/store/Manager.java
--- 5. Fourth Hole/src/main/refactoringgolf/store/Manager.java	2012-06-08 00:19:30.000000000 +0200
+++ 4. Third Hole/src/main/refactoringgolf/store/Manager.java	2012-06-08 00:19:30.000000000 +0200
@@ -1,33 +1,21 @@
 package refactoringgolf.store;
 
-import java.util.Collections;
-import java.util.HashSet;
-import java.util.Set;
-
 public class Manager extends Employee {
 
-	protected Set<Employee> subordinates = new HashSet<Employee>();
-
 	public Manager(String firstName, String lastName, float fixedSalary) {
 		super(firstName, lastName, fixedSalary);
 	}
 
-	public Set<Employee> getSubordinates() {
-		return Collections.unmodifiableSet(subordinates);
-	}
-
-	public void addSubordinate(Employee subordinate) {
-		subordinates.add(subordinate);
-		subordinate.manager = this;
+	public float salaryAfterAdditionsAndDeductions() {
+		float benefits = salaryBenefits();
+		float pensionFounds = this.fixedSalary * 10 / 100;
+		float tax = 0;
+		if (fixedSalary > 3500)
+			tax = fixedSalary * 5 / 100;
+		return fixedSalary + benefits - pensionFounds - tax;
 	}
 
-	public void removeSubordinate(Employee subordinate) {
-		subordinates.remove(subordinate);
-		subordinate.manager = null;
-	}
-	
-	@Override
-	protected float salaryBenefits() {
+	private float salaryBenefits() {
 		return this.subordinates.size() * 20;
 	}
 }
diff -U 3 -H -d -r -N -- 5. Fourth Hole/src/main/refactoringgolf/store/Salesman.java 4. Third Hole/src/main/refactoringgolf/store/Salesman.java
--- 5. Fourth Hole/src/main/refactoringgolf/store/Salesman.java	2012-06-08 00:19:30.000000000 +0200
+++ 4. Third Hole/src/main/refactoringgolf/store/Salesman.java	2012-06-08 00:19:30.000000000 +0200
@@ -22,11 +22,16 @@
 		return monthQuota;
 	}
 
-	public void updateMonthQuota(float addQuota) {
-		monthQuota = monthQuota + addQuota;
+	public float netSalary() {
+		float benefits = monthQuota * commissionPorcentage / 100;
+		float pensionFounds = fixedSalary * 10 / 100;
+		float tax = 0;
+		if (fixedSalary > 3500)
+			tax = fixedSalary * 5 / 100;
+		return fixedSalary + benefits - pensionFounds - tax;
 	}
 
-	protected float salaryBenefits() {
-		return monthQuota * commissionPorcentage / 100;
+	public void updateMonthQuota(float addQuota) {
+		monthQuota = monthQuota + addQuota;
 	}
 }
diff -U 3 -H -d -r -N -- 5. Fourth Hole/src/test/refactoringgolf/store/ManagerTest.java 4. Third Hole/src/test/refactoringgolf/store/ManagerTest.java
--- 5. Fourth Hole/src/test/refactoringgolf/store/ManagerTest.java	2012-06-08 00:19:30.000000000 +0200
+++ 4. Third Hole/src/test/refactoringgolf/store/ManagerTest.java	2012-06-08 00:19:30.000000000 +0200
@@ -12,17 +12,17 @@
 	@Test
 	public void calculateTheNetSalaryWhenFixedSalaryIsUnderTheMinimumTax() {
 		int fixedSalary = 3000;
-		Employee manager = createManager(fixedSalary);
+		Manager manager = createManager(fixedSalary);
 
-		assertEquals(2700, manager.netSalary(), 0);
+		assertEquals(2700, manager.salaryAfterAdditionsAndDeductions(), 0);
 	}
 
 	@Test
 	public void calculateTheNetSalaryWhenFixedSalaryIsOverTheMinimumTax() {
 		int fixedSalary = 5000;
-		Employee manager = createManager(fixedSalary);
+		Manager manager = createManager(fixedSalary);
 
-		assertEquals(4250, manager.netSalary(), 0);
+		assertEquals(4250, manager.salaryAfterAdditionsAndDeductions(), 0);
 	}
 
 	@Test
@@ -31,7 +31,7 @@
 		Manager manager = createManager(fixedSalary);
 		manager.addSubordinate(createSubordinate());
 
-		assertEquals(2720, manager.netSalary(), 0);
+		assertEquals(2720, manager.salaryAfterAdditionsAndDeductions(), 0);
 	}
 
 	private Manager createManager(int fixedSalary) {
